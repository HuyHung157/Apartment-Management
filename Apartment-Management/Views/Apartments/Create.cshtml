@model Apartment_Management.Models.Apartment

@{
    ViewBag.Title = "Create";
}
<!DOCTYPE html>

<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="~/Content/css/form.css" rel="stylesheet" type="text/css" />
</head>
<body>
    <h2>Create</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Apartment</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="row">
        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.BuildingID, "BuildingID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("BuildingID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BuildingID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.ApartmentName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ApartmentName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ApartmentName, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-11">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row">
        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <label class="toggle" for="toggle">
                    <input type="checkbox" id="toggle">
                    <span class="slider"></span>
                    @Html.EditorFor(model => model.IsActive)
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </label>
            </div>
        </div>
        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.IsArchive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <label class="toggle" >
                    <input type="checkbox" id="toggle">
                    <span class="slider"></span>
                    @Html.EditorFor(model => model.IsArchive)
                    @Html.ValidationMessageFor(model => model.IsArchive, "", new { @class = "text-danger" })
                </label>
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button class="col-lg-2" style="background: #918055">Create</button>
            @*<input type="submit" value="Create" class="btn btn-default" />*@
        </div>
    </div>
</div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
</body>
</html>

